/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iug;

import Persistencia.Conexion2;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class Transferir extends javax.swing.JFrame {

    // Constructor para retornar a Bienvenida
    private String nombrecito;
    public void setNombre(String nombre){
    this.nombrecito=nombre; 
    System.out.println(nombrecito + "Desde Transferir");      
    }
    public void setUser(String user){
        this.nombrecito=user;
        System.out.println(nombrecito + "Desde Transferir");
    }
    private float balancito;
    public void setBalance(float balance){
    this.balancito=balance; 
    System.out.println(balancito + ": Desde Transferir");
    }//contructor para traer el numero de cuenta del cliente
    private String cuentica;
    public void setAccount(String account){
        this.cuentica=account;
    System.out.println(cuentica + ": Desde Transferir");  
    } 
    //  1. contructor para traer el cedula del cliente
    private String cedulita;
    public void setCedula(String cedula){
        this.cedulita=cedula; 
    System.out.println(cedulita + ": Desde Transferir"); 
    } 
    //  4. contructor para traer el cumplea単os del cliente
    private String cumpleanitos;
    public void setCumple(String cumple){
        this.cumpleanitos=cumple;  
    System.out.println(cumpleanitos + ": Desde Transferir"); 
    } 
    //  5. contructor para traer el genero del cliente
    private String generito;
    public void setGenero(String genero){
        this.generito=genero;
    System.out.println(generito + ": Desde Transferir"); } 
    //  6. contructor para traer el direccion del cliente
    private String direccioncita;
    public void setDireccion(String direccion){
        this.direccioncita=direccion;
    System.out.println(direccioncita + ": Desde Transferir"); 
    } 
    //  7. contructor para traer el telefono del cliente
    private String telefonito;
    public void setTelefono(String telefono){
        this.telefonito=telefono;    
    System.out.println(telefonito + ": Desde Transferir"); 
    } 
    //  8. contructor para traer el correo del cliente
    private String correito;
    public void setCorreo(String correo){
        this.correito=correo;
    System.out.println(correito + ": Desde Transferir"); 
    } 
    //  9. contructor para traer el civil del cliente
    private String civilcito;
    public void setCivil(String civil){
        this.civilcito=civil;   
    System.out.println(civilcito + ": Desde Transferir"); 
    } 
    //  10. contructor para traer el tipo de cuenta del cliente
    private String tcuentita;
    public void setTipoCuenta(String tipoCuenta){
        this.tcuentita=tipoCuenta;    
    System.out.println(tcuentita + ": Desde Transferir"); 
    } 
    //  11. contructor para traer el numero de cuenta del cliente
    private String numCuentita;
    public void setNumCuenta(String numCuenta){
        this.numCuentita=numCuenta; 
    System.out.println(numCuentita + ": Desde Transferir"); 
    } 
    //  12. contructor para traer el contrase単a del cliente
    private String contrasenita;
    public void setContra(String contrase単a){
        this.contrasenita=contrase単a;  
    System.out.println(contrasenita + ": Desde Transferir"); 
    } 
    //  14. contructor para traer el balance del cliente
    private String aperturita;
    public void setApertura(String apertura){
        this.aperturita=apertura; 
    System.out.println(aperturita + ": Desde Transferir"); 
    } 
   

    /**
     * Creates new form Transfer
     */
    public Transferir() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        body = new javax.swing.JPanel();
        footer = new javax.swing.JPanel();
        inicio = new javax.swing.JButton();
        head = new javax.swing.JPanel();
        lblTitu = new javax.swing.JLabel();
        lblCuenta = new javax.swing.JLabel();
        lblCanti = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnTrans = new javax.swing.JButton();
        txtCuenta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        body.setBackground(new java.awt.Color(29, 34, 42));

        footer.setBackground(new java.awt.Color(34, 40, 49));

        inicio.setBackground(new java.awt.Color(34, 40, 49));
        inicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icoInicio.png"))); // NOI18N
        inicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inicio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inicio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        head.setBackground(new java.awt.Color(34, 40, 49));
        head.setForeground(new java.awt.Color(34, 40, 49));

        lblTitu.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        lblTitu.setForeground(new java.awt.Color(255, 255, 255));
        lblTitu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitu.setText("TRANSFERIR");

        javax.swing.GroupLayout headLayout = new javax.swing.GroupLayout(head);
        head.setLayout(headLayout);
        headLayout.setHorizontalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        headLayout.setVerticalGroup(
            headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTitu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        lblCuenta.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblCuenta.setForeground(new java.awt.Color(255, 255, 255));
        lblCuenta.setText("Numero de cuenta a transferir");

        lblCanti.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblCanti.setForeground(new java.awt.Color(255, 255, 255));
        lblCanti.setText("Cantidad a Transferir");

        txtCantidad.setBackground(new java.awt.Color(120, 220, 220));
        txtCantidad.setText("0");
        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });

        btnTrans.setBackground(new java.awt.Color(150, 250, 250));
        btnTrans.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnTrans.setForeground(new java.awt.Color(29, 34, 42));
        btnTrans.setText("Transferir");
        btnTrans.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransActionPerformed(evt);
            }
        });

        txtCuenta.setBackground(new java.awt.Color(120, 220, 220));
        txtCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCuentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(head, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(footer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
            .addGroup(bodyLayout.createSequentialGroup()
                .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCuenta)
                            .addComponent(lblCanti)))
                    .addGroup(bodyLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                .addComponent(head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCuenta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCanti)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTrans)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        // Llamamos a la vista Bienvenida, le enviamos los datos y abrimos la vista
        String nombre=nombrecito; 
        float balance=balancito;
        String cedula=cedulita;
        String cumpleanos=cumpleanitos;
        String genero=generito;
        String direccion=direccioncita;
        String telefono=telefonito;
        String correo=correito;
        String civil=civilcito;
        String tCuenta=tcuentita;
        String numCuenta=numCuentita;
        String contrasena=contrasenita;
        String apertura=aperturita;
        String cuenta=cuentica;
        Bienvenida vi=new Bienvenida();
        //Enviamos todos los datos para su uso en la otra vista
        vi.setUser(nombre);
        vi.setNombre(nombre);
        vi.setBalance(balance);
        vi.setCedula(cedula);
        vi.setCumple(cumpleanos);
        vi.setGenero(genero);
        vi.setDireccion(direccion);
        vi.setTelefono(telefono);
        vi.setCorreo(correo);
        vi.setCivil(civil);
        vi.setTipoCuenta(tCuenta);
        vi.setNumCuenta(numCuenta);
        vi.setContra(contrasena);
        vi.setApertura(apertura);
        vi.setAccount(cuenta);
        vi.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_inicioActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void btnTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransActionPerformed
    
        //  capturo contrase単a de la interfaz y asigno la contrase単a q ya traigo ambas a una nueva variable
        String ncuenta=(txtCuenta.getText());        
        String ctransf=(txtCantidad.getText());
        int cantat = Integer.parseInt(txtCantidad.getText());
        
                    // Hago conexion Base de datos
                    Conexion2 conter=new Conexion2();
                    Connection conexion=conter.getConexion();
                    System.out.println("Se hizo conexcion al dar depositar");
                    // Se termina conexion base de datos
                
                    
            if (ncuenta.isEmpty() || ctransf.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Algun campo est叩 vac鱈o");
            }else {
                try {
                /** hace consulta solo para saber si si existe tal registro lo q significaria q se le puede dar acceso  */
                String query = "SELECT * FROM clientes WHERE account_number = ?";
                PreparedStatement statement = conexion.prepareStatement(query);
                statement.setString(1, ncuenta);                
                ResultSet resultado = statement.executeQuery();
                            /**    resultado es el objeto q se crea de la conculta sql y el numero (2) es la posicion de ese objeto */
                            if (resultado.next()) {// Si hay un resultado
                            String cedula2=resultado.getString(1);
                            String nombre2=resultado.getString(2);
                            String apellido2=resultado.getString(3);
                            String cumple2=resultado.getString(4);
                            String genero2=resultado.getString(5);
                            String direccion2=resultado.getString(6);
                            String telefono2=resultado.getString(7);
                            String correo2=resultado.getString(8);
                            String civil2=resultado.getString(9);
                            String tipoCuenta2=resultado.getString(10);
                            String numCuenta2=resultado.getString(11);
                            String contrase単a2=resultado.getString(12);
                            int balance2=resultado.getInt(13);
                            String apertura2=resultado.getString(14);   
                            this.dispose();
                            
                                    if(cantat<balancito){
                                        System.out.println("se puede");
                                                    balance2=balance2+cantat;
                                                    String bal2=Float.toString(balance2);  
                                                    /**   Consulta DB     */
                                                    String updateQuery = "UPDATE clientes SET balance= ? WHERE CC= ?";
                                                    PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                                    updateStatement.setString(1, bal2);
                                                    updateStatement.setString(2, cedula2);
                                                                    int resultado2 = updateStatement.executeUpdate();
                                                                    if (resultado2 > 0) {
                                                                        System.out.println("Balance2 actualizado exitosamente.");
                                                                        JOptionPane.showMessageDialog(null, "Se deposito $"+cantat+" pesos a "+nombre2 + " " + cedula2);
                                                                    } else {
                                                                        JOptionPane.showMessageDialog(null, "Error al actualizar el balance.");
                                                                    }    
                                                                    
                                                                    String x= cedulita;                   
                                                                    float cantac=balancito-cantat;
                                                                    String nbalance=Float.toString(cantac);
                                                                    

                                                    String updateQuery2 = "UPDATE clientes SET balance= ? WHERE CC= ?";
                                                    PreparedStatement updateStatement2 = conexion.prepareStatement(updateQuery2);
                                                    updateStatement2.setString(1, nbalance);
                                                    updateStatement2.setString(2, x);

                                                    int resultado3 = updateStatement2.executeUpdate();
                                                    if (resultado3 > 0) {

                                                                                        Bienvenida vi=new Bienvenida();
                                                                                        //Enviamos todos los datos para su uso en la otra vista
                                                                                        vi.setUser(nombrecito);
                                                                                        vi.setNombre(nombrecito);
                                                                                        vi.setBalance(cantac);
                                                                                        vi.setCedula(cedulita);
                                                                                        vi.setCumple(cumpleanitos);
                                                                                        vi.setGenero(generito);
                                                                                        vi.setDireccion(direccioncita);
                                                                                        vi.setTelefono(telefonito);
                                                                                        vi.setCorreo(correito);
                                                                                        vi.setCivil(civilcito);
                                                                                        vi.setTipoCuenta(tcuentita);
                                                                                        vi.setNumCuenta(numCuentita);
                                                                                        vi.setContra(contrasenita);
                                                                                        vi.setApertura(aperturita);
                                                                                        vi.setAccount(cuentica);
                                                                                        vi.setVisible(true);}


                                    }else{
                                        System.out.println("no sepuede");}
                            } else {
                                //  si la cedula o la contrase単a son incorrectas, manda un mensaje y no deja ingresar
                                JOptionPane.showMessageDialog(null, "C辿dula o contrase単a incorrecta");               
          
            }
                } catch (SQLException e) {
                    //  si hay algun error con la consulta, se muestrar en el Output o consola
                    JOptionPane.showMessageDialog(null, "Error al ejecutar la consulta: " + e.getMessage());
        }
    }
        
        
        
        
        
    }//GEN-LAST:event_btnTransActionPerformed

    private void txtCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCuentaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel body;
    private javax.swing.JButton btnTrans;
    private javax.swing.JPanel footer;
    private javax.swing.JPanel head;
    private javax.swing.JButton inicio;
    private javax.swing.JLabel lblCanti;
    private javax.swing.JLabel lblCuenta;
    private javax.swing.JLabel lblTitu;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCuenta;
    // End of variables declaration//GEN-END:variables
}
