/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iug;

import Persistencia.Conexion2;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class BaseDatos extends javax.swing.JFrame {
    
    private String nombrecito;
    public void setNombre(String nombre){
    this.nombrecito=nombre; 
    System.out.println(nombrecito + ": Desde BaseDatos");
    }
    private float balancito;
    public void setBalance(float balance){
    this.balancito=balance; 
    System.out.println(balancito + ": Desde BaseDatos");
    }//contructor para traer el numero de cuenta del cliente
    private String cuentica;
    public void setAccount(String account){
        this.cuentica=account;
    System.out.println(cuentica + ": Desde BaseDatos");  
    } 
    //  1. contructor para traer el cedula del cliente
    private String cedulita;
    public void setCedula(String cedula){
        this.cedulita=cedula; 
    System.out.println(cedulita + ": Desde BaseDatos"); 
    } 
    //  4. contructor para traer el cumpleaños del cliente
    private String cumpleanitos;
    public void setCumple(String cumple){
        this.cumpleanitos=cumple;  
    System.out.println(cumpleanitos + ": Desde BaseDatos"); 
    } 
    //  5. contructor para traer el genero del cliente
    private String generito;
    public void setGenero(String genero){
        this.generito=genero;
    System.out.println(generito + ": Desde BaseDatos"); } 
    //  6. contructor para traer el direccion del cliente
    private String direccioncita;
    public void setDireccion(String direccion){
        this.direccioncita=direccion;
    System.out.println(direccioncita + ": Desde BaseDatos"); 
    } 
    //  7. contructor para traer el telefono del cliente
    private String telefonito;
    public void setTelefono(String telefono){
        this.telefonito=telefono;    
    System.out.println(telefonito + ": Desde BaseDatos"); 
    } 
    //  8. contructor para traer el correo del cliente
    private String correito;
    public void setCorreo(String correo){
        this.correito=correo;
    System.out.println(correito + ": Desde BaseDatos"); 
    } 
    //  9. contructor para traer el civil del cliente
    private String civilcito;
    public void setCivil(String civil){
        this.civilcito=civil;   
    System.out.println(civilcito + ": Desde BaseDatos"); 
    } 
    //  10. contructor para traer el tipo de cuenta del cliente
    private String tcuentita;
    public void setTipoCuenta(String tipoCuenta){
        this.tcuentita=tipoCuenta;    
    System.out.println(tcuentita + ": Desde BaseDatos"); 
    } 
    //  11. contructor para traer el numero de cuenta del cliente
    private String numCuentita;
    public void setNumCuenta(String numCuenta){
        this.numCuentita=numCuenta; 
    System.out.println(numCuentita + ": Desde BaseDatos"); 
    } 
    //  12. contructor para traer el contraseña del cliente
    private String contrasenita;
    public void setContra(String contraseña){
        this.contrasenita=contraseña;  
    System.out.println(contrasenita + ": Desde BaseDatos"); 
    } 
    //  14. contructor para traer el balance del cliente
    private String aperturita;
    public void setApertura(String apertura){
        this.aperturita=apertura; 
    System.out.println(aperturita + ": Desde BaseDatos");
    }  
   

    /**
     * Creates new form saldo
     */
    public BaseDatos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCoAc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNewCo = new javax.swing.JPasswordField();
        txtConfir = new javax.swing.JPasswordField();
        btnEditar = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNewDir = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNewCor = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNewTel = new javax.swing.JTextField();
        txtTel = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        boxCivil = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(29, 34, 42));

        jPanel3.setBackground(new java.awt.Color(34, 40, 49));

        btnHome.setBackground(new java.awt.Color(34, 40, 49));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icoInicio.png"))); // NOI18N
        btnHome.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(14, 14, 14))
        );

        jPanel4.setBackground(new java.awt.Color(34, 40, 49));
        jPanel4.setForeground(new java.awt.Color(34, 40, 49));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ACTUALIZAR DATOS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Contraseña actual");

        txtCoAc.setBackground(new java.awt.Color(184, 228, 242));
        txtCoAc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCoAcActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nueva contraseña");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Confirmar Contraseña");

        txtNewCo.setBackground(new java.awt.Color(184, 228, 242));
        txtNewCo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNewCo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNewCoKeyTyped(evt);
            }
        });

        txtConfir.setBackground(new java.awt.Color(184, 228, 242));
        txtConfir.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtConfir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConfirKeyTyped(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(184, 228, 242));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Direccion");

        txtDireccion.setBackground(new java.awt.Color(184, 228, 242));
        txtDireccion.setText("\"Aqui va la direcion de MySQL\"");
        txtDireccion.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nueva Direccion");

        txtNewDir.setBackground(new java.awt.Color(184, 228, 242));
        txtNewDir.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNewDir.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtNewDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewDirActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nuevo Correo");

        txtNewCor.setBackground(new java.awt.Color(184, 228, 242));
        txtNewCor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNewCor.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtNewCor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewCorActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Correo");

        txtCorreo.setBackground(new java.awt.Color(184, 228, 242));
        txtCorreo.setText("\"Consulta del correo de MySQL\"");
        txtCorreo.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nuevo Telefono");

        txtNewTel.setBackground(new java.awt.Color(184, 228, 242));
        txtNewTel.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNewTel.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtNewTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewTelActionPerformed(evt);
            }
        });

        txtTel.setBackground(new java.awt.Color(184, 228, 242));
        txtTel.setText("\"Consulta del correo de MySQL\"");
        txtTel.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        txtTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Telefono");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Estado Civil");

        boxCivil.setBackground(new java.awt.Color(184, 228, 242));
        boxCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "SOLTERO", "CASADO", "DIVORCIADO", "VIUDO" }));
        boxCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCivilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCoAc)
                                .addComponent(jLabel2))
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNewCo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtConfir, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtNewCor, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNewDir, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtNewTel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEditar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCoAc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConfir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // 
        String nombre=nombrecito;
        float balance=balancito;
        String cedula=cedulita;
        String cumpleanos=cumpleanitos;
        String genero=generito;
        String direccion=direccioncita;
        String telefono=telefonito;
        String correo=correito;
        String civil=civilcito;
        String tCuenta=tcuentita;
        String numCuenta=numCuentita;
        String contrasena=contrasenita;
        String apertura=aperturita;
        String cuenta=cuentica;
        Bienvenida verDtbase=new Bienvenida();
        verDtbase.setNombre(nombre);
        verDtbase.setBalance(balance);
        verDtbase.setCedula(cedula);
        verDtbase.setCumple(cumpleanos);
        verDtbase.setGenero(genero);
        verDtbase.setDireccion(direccion);
        verDtbase.setTelefono(telefono);
        verDtbase.setCorreo(correo);
        verDtbase.setCivil(civil);
        verDtbase.setTipoCuenta(tCuenta);
        verDtbase.setNumCuenta(numCuenta);
        verDtbase.setContra(contrasena);
        verDtbase.setApertura(apertura);        
        verDtbase.setAccount(cuenta); 
        verDtbase.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void txtCoAcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCoAcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCoAcActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        
        //  capturo contraseña de la interfaz y asigno la contraseña q ya traigo ambas a una nueva variable
        String contraUp=(txtCoAc.getText());
        String contraNew=new String (txtNewCo.getPassword());
        String contraCon=new String (txtConfir.getPassword());
        // alamceno en String los datos que necesito para las consultas
        String contraa=(contrasenita);
        String dbDire=direccioncita;
        txtDireccion.setText(dbDire);
        String dbCore=correito;
        txtCorreo.setText(dbCore);
        String dbTele=telefonito;
        txtTel.setText(dbTele);
        String dbCivil=civilcito;
        txtTel.setText(dbCivil);
        
    if(contraUp.isEmpty() || contraNew.isEmpty() || contraCon.isEmpty()){  
        JOptionPane.showMessageDialog(null, "Porfavor, Confirme su contraseña y cree una Contraseña nueva");
        System.out.println("Campos Vacios");
        txtCoAc.setText("");
        txtConfir.setText("");
        txtNewCo.setText("");
        }else{
            if(!contraNew.equals(contraCon)){
            System.out.println("Contraseñas Desiguales");
             JOptionPane.showMessageDialog(null, "Las Nuevas contraseñas NO COINCIDEN");
            txtCoAc.setText("");
            txtConfir.setText("");
            txtNewCo.setText("");
        }else{
            if (contraUp.equals(contraa) && !contraUp.equals(contraNew)){
            System.out.println("Contraseña Actual Correcta y es diferenta a la nueva");                                        
                    // Hago conexion Base de datos
                    Conexion2 conter=new Conexion2();
                    Connection conexion=conter.getConexion();
                    System.out.println("Se hace la conexion para Acutalizar los datos");
                    // Se termina conexion base de datos
                    
                                // try catch de la consulta 
                                try {
                                //   Consulta DB    
                                String updateQuery = "UPDATE clientes SET account_password= ?  WHERE CC= ?";
                                PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                updateStatement.setString(1, contraCon);
                                updateStatement.setString(2, cedulita);
                                    int resultado = updateStatement.executeUpdate();
                                    if (resultado > 0) {
                                    
                                        System.out.println("Contraseña actulizada correctamente");
                                    JOptionPane.showMessageDialog(null, "Se Actulizo tu contraseña "+nombrecito+". No compartas tu contraseña con tercera");
                                                
                                                Ingresar vi=new Ingresar();
                                                //Nos salimos de la cuenta logeada para qeu vuelvan a ingresar con la contraseña nueva
                                                
                                                vi.setVisible(true);
                                                this.dispose();   
                                } else {
                                    JOptionPane.showMessageDialog(null, "Error al actualizar La Base de Datos.");
                                }            

                                } catch (SQLException e) {
                                    //  si hay algun error con la consulta, se muestrar en el Output o consola
                                    JOptionPane.showMessageDialog(null, "Error al ejecutar la consulta: " + e.getMessage());
             }
                                //segunda: actualizar Direccion
                                if(!txtNewDir.getText().isEmpty() && !txtNewDir.getText().equals(dbDire)){
                                    try {
                                        //Se almacena la nueva direccion y se actualiza
                                        String nuevaD=txtNewDir.getText();
                                                        //   Consulta DB Para Direccion   
                                                String updateQuery = "UPDATE clientes SET address= ?  WHERE CC= ?";
                                                PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                                updateStatement.setString(1, nuevaD);
                                                updateStatement.setString(2, cedulita);
                                                    int resultado = updateStatement.executeUpdate();
                                                    if(resultado>0){
                                                        System.out.println("Direccion actulizada correctamente");
                                        JOptionPane.showMessageDialog(null, "Tambien se actualizo La Direccion: "+nuevaD);

                                                    }else{
                                                        System.out.println("Error al actulizar la base de datos");
                                                    }

                                            } catch (Exception e) {
                                                        System.out.println("Error en consulta: "+e.getMessage());
                                            }
                                }else{
                                    System.out.println("No hay campos para actualizar la direccion");
                                }
            // fin de la Segunda consulta "Direccion"
            //Tercera: actualizar Correo
                                if(!txtNewCor.getText().isEmpty() && !txtNewCor.getText().equals(dbCore)){
                                    try {
                                        //Se almacena la nueva direccion y se actualiza
                                        String nuevCo=txtNewCor.getText();
                                                        //   Consulta DB Para Direccion   
                                                String updateQuery = "UPDATE clientes SET email= ?  WHERE CC= ?";
                                                PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                                updateStatement.setString(1, nuevCo);
                                                updateStatement.setString(2, cedulita);
                                                    int resultado = updateStatement.executeUpdate();
                                                    if(resultado>0){
                                                        System.out.println("Correo actulizada correctamente");
                                        JOptionPane.showMessageDialog(null, "Y Tambien se actualizo el Correo: "+nuevCo);

                                                    }else{
                                                        System.out.println("Error al actulizar la base de datos");
                                                    }

                                            } catch (Exception e) {
                                                        System.out.println("Error en consulta: "+e.getMessage());
                                            }
                                }else{
                                    System.out.println("No hay campos para actualizar la direccion");
                                }
                //Fin de la Tercera
                // Cuarta: Actualizar Telefono
                if(!txtNewTel.getText().isEmpty() && !txtNewTel.getText().equals(dbTele)){
                                    try {
                                        //Se almacena la nueva direccion y se actualiza
                                        String nuevTl=txtNewTel.getText();
                                                        //   Consulta DB Para Direccion   
                                                String updateQuery = "UPDATE clientes SET phone= ?  WHERE CC= ?";
                                                PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                                updateStatement.setString(1, nuevTl);
                                                updateStatement.setString(2, cedulita);
                                                    int resultado = updateStatement.executeUpdate();
                                                    if(resultado>0){
                                                        System.out.println("Telefono actulizado correctamente");
                                        JOptionPane.showMessageDialog(null, "Porsupuesto Tambien se actualizo el Telefono: "+nuevTl);

                                                    }else{
                                                        System.out.println("Error al actulizar la base de datos");
                                                    }

                                            } catch (Exception e) {
                                                        System.out.println("Error en consulta: "+e.getMessage());
                                            }
                                }else{
                                    System.out.println("No hay campos para actualizar el Telefono");
                                }
                //fin de la Cuarta
                // Quinta: Actualizar Estado Civil
                String Combo=boxCivil.getSelectedItem().toString();
                if(!Combo.equals("N/A") && !Combo.equals(dbCivil)){
                    System.out.println("Entro a hacer la consulta para Civil: "+Combo);
                                    try {
                                        //Se almacena la nueva direccion y se actualiza
                                                        //   Consulta DB Para Direccion   
                                                String updateQuery = "UPDATE clientes SET marital_status= ?  WHERE CC= ?";
                                                PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
                                                updateStatement.setString(1, Combo);
                                                updateStatement.setString(2, cedulita);
                                                    int resultado = updateStatement.executeUpdate();
                                                    if(resultado>0){
                                                        System.out.println("Civil actulizado correctamente");
                                        JOptionPane.showMessageDialog(null, "De ultimas se actualizo el Estado Civil: "+Combo);

                                                    }else{
                                                        System.out.println("Error al actulizar la base de datos");
                                                    }

                                            } catch (Exception e) {
                                                        System.out.println("Error en consulta: "+e.getMessage());
                                            }
                                }else{
                                    System.out.println("No hay campos para actualizar el Civil");
                                }
                
            }else{
                JOptionPane.showMessageDialog(null, "NO Se actulizo, Crea una contraseña nueva");
                txtCoAc.setText("");
                txtConfir.setText("");
                txtNewCo.setText("");
            }}
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
        txtDireccion.setText(direccioncita);
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void txtNewDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewDirActionPerformed

    private void txtNewCorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewCorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewCorActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void txtNewTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewTelActionPerformed

    private void txtTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelActionPerformed

    private void txtNewCoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewCoKeyTyped
        // Limitar caracteres
        if(txtNewCo.getText().length()>=20){
            evt.consume();
        }
    }//GEN-LAST:event_txtNewCoKeyTyped

    private void txtConfirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirKeyTyped
        // TODO add your handling code here:
        if(txtConfir.getText().length()>=20){
            evt.consume();
        }
    }//GEN-LAST:event_txtConfirKeyTyped

    private void boxCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCivilActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCivil;
    private javax.swing.JToggleButton btnEditar;
    private javax.swing.JButton btnHome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtCoAc;
    private javax.swing.JPasswordField txtConfir;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JPasswordField txtNewCo;
    private javax.swing.JTextField txtNewCor;
    private javax.swing.JTextField txtNewDir;
    private javax.swing.JTextField txtNewTel;
    private javax.swing.JTextField txtTel;
    // End of variables declaration//GEN-END:variables
}
