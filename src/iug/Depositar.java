/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iug;

import javax.swing.JOptionPane;
import Persistencia.Conexion2;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Usuario
 */
   

public class Depositar extends javax.swing.JFrame {
    // Constructor para retornar a Bienvenida
    
    // Constructor para retornar a Bienvenida
    private String nombrecito;
    public void setNombre(String nombre){
    this.nombrecito=nombre; 
    System.out.println(nombrecito + "Desde Depositarrrr");      
    }
    public void setUser(String nombre){
    this.nombrecito=nombre; 
    System.out.println(nombrecito + "Desde Depositarrrr");      
    }
    private float balancito;
    public void setBalance(float balance){
    this.balancito=balance; 
    System.out.println(balancito + ": Desde Depositarrr");
    }//contructor para traer el numero de cuenta del cliente
    private String cuentica;
    public void setAccount(String account){
        this.cuentica=account;
    System.out.println(cuentica + ": Desde Depositarrrr");  
    } 
    //  1. contructor para traer el cedula del cliente
    private String cedulita;
    public void setCedula(String cedula){
        this.cedulita=cedula; 
    System.out.println(cedulita + ": Desde Depositarrrr"); 
    } 
    //  4. contructor para traer el cumplea単os del cliente
    private String cumpleanitos;
    public void setCumple(String cumple){
        this.cumpleanitos=cumple;  
    System.out.println(cumpleanitos + ": Desde Depositarrr"); 
    } 
    //  5. contructor para traer el genero del cliente
    private String generito;
    public void setGenero(String genero){
        this.generito=genero;
    System.out.println(generito + ": Desde Depositarrrrr"); } 
    //  6. contructor para traer el direccion del cliente
    private String direccioncita;
    public void setDireccion(String direccion){
        this.direccioncita=direccion;
    System.out.println(direccioncita + ": Desde Depositarrr"); 
    } 
    //  7. contructor para traer el telefono del cliente
    private String telefonito;
    public void setTelefono(String telefono){
        this.telefonito=telefono;    
    System.out.println(telefonito + ": Desde Depositarrrr"); 
    } 
    //  8. contructor para traer el correo del cliente
    private String correito;
    public void setCorreo(String correo){
        this.correito=correo;
    System.out.println(correito + ": Desde Depositar"); 
    } 
    //  9. contructor para traer el civil del cliente
    private String civilcito;
    public void setCivil(String civil){
        this.civilcito=civil;   
    System.out.println(civilcito + ": Desde Depositar"); 
    } 
    //  10. contructor para traer el tipo de cuenta del cliente
    private String tcuentita;
    public void setTipoCuenta(String tipoCuenta){
        this.tcuentita=tipoCuenta;    
    System.out.println(tcuentita + ": Desde Depositar"); 
    } 
    //  11. contructor para traer el numero de cuenta del cliente
    private String numCuentita;
    public void setNumCuenta(String numCuenta){
        this.numCuentita=numCuenta; 
    System.out.println(numCuentita + ": Desde Depositar"); 
    } 
    //  12. contructor para traer el contrase単a del cliente
    private String contrasenita;
    public void setContra(String contrase単a){
        this.contrasenita=contrase単a;  
    System.out.println(contrasenita + ": Desde Depositar"); 
    } 
    //  14. contructor para traer el balance del cliente
    private String aperturita;
    public void setApertura(String apertura){
        this.aperturita=apertura; 
    System.out.println(aperturita + ": Desde Depositar"); 
    } 
   
    

    /**
     * Creates new form depositar
     */
    public Depositar() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        inicio = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDepo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(29, 34, 42));

        jPanel3.setBackground(new java.awt.Color(34, 40, 49));

        inicio.setBackground(new java.awt.Color(34, 40, 49));
        inicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icoInicio.png"))); // NOI18N
        inicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inicio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inicio)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(34, 40, 49));
        jPanel4.setForeground(new java.awt.Color(34, 40, 49));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DEPOSITAR");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        txtDepo.setBackground(new java.awt.Color(151, 230, 255));
        txtDepo.setText("0");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cuanto desea depositar");

        btnLogin.setBackground(new java.awt.Color(151, 230, 255));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(29, 34, 42));
        btnLogin.setText("Deposita");
        btnLogin.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtDepo, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDepo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogin)
                .addGap(12, 12, 12)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//  constructor para no perder la sesion
    
    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        // Llamamos a la vista Bienvenida, le enviamos los datos y abrimos la vista
        String nombre=nombrecito; 
        float balance=balancito;
        String cedula=cedulita;
        String cumpleanos=cumpleanitos;
        String genero=generito;
        String direccion=direccioncita;
        String telefono=telefonito;
        String correo=correito;
        String civil=civilcito;
        String tCuenta=tcuentita;
        String numCuenta=numCuentita;
        String contrasena=contrasenita;
        String apertura=aperturita;
        String cuenta=cuentica;
        Bienvenida vi=new Bienvenida();
        //Enviamos todos los datos para su uso en la otra vista
        vi.setUser(nombre);
        vi.setNombre(nombre);
        vi.setBalance(balance);
        vi.setCedula(cedula);
        vi.setCumple(cumpleanos);
        vi.setGenero(genero);
        vi.setDireccion(direccion);
        vi.setTelefono(telefono);
        vi.setCorreo(correo);
        vi.setCivil(civil);
        vi.setTipoCuenta(tCuenta);
        vi.setNumCuenta(numCuenta);
        vi.setContra(contrasena);
        vi.setApertura(apertura);
        vi.setAccount(cuenta);
        vi.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_inicioActionPerformed
    
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
    //  almaceno el valor que se ingresa para depositar
    String cuanti=(txtDepo.getText());
    
    // Hago conexion Base de datos
    Conexion2 conter=new Conexion2();
    Connection conexion=conter.getConexion();
    System.out.println("Se hizo conexcion al dar depositar");
    // Se termina conexion base de datos
    
    
        // Creo variable para hacer la operacion matematica, operarla y luego eviar nuevo dato a BASE DE DATO
        float valor=0;
        int limite=1000;    
        valor=Integer.parseInt(cuanti)+balancito;
        String fin=Float.toString(valor);
        String x= cedulita;
        // Trae la cedula para poder enviarla como consulta a la base de datos con ello modificamos el valor del el usuario q queremos
        
    //Valida q no este vacio el campo     
    if (cuanti.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Por favor ingrese un Monto");
    } else {
            // Entra ahora si a validar la operacion, valor razonable y consulta
            if(limite>Integer.parseInt(cuanti)){
            JOptionPane.showMessageDialog(null, "El Monto Minimo p叩ra para depositar es $ 1.000 pesos");
            }else{
            // try catch de la consulta 
            try {
            /**   Consulta DB     */
            String updateQuery = "UPDATE clientes SET balance= ? WHERE CC= ?";
            PreparedStatement updateStatement = conexion.prepareStatement(updateQuery);
            updateStatement.setString(1, fin);
            updateStatement.setString(2, x);
                int resultado = updateStatement.executeUpdate();
                if (resultado > 0) {
                System.out.println("Balance actualizado exitosamente.");
                JOptionPane.showMessageDialog(null, "Se deposito $"+cuanti+" pesos a su Cuenta. Saldo: $"+fin);
        
//se devuelven los datos que cambiaron a la vista "Bienvenida"
        String nombre=nombrecito; 
        float balance=valor;
        String cedula=cedulita;
        String cumpleanos=cumpleanitos;
        String genero=generito;
        String direccion=direccioncita;
        String telefono=telefonito;
        String correo=correito;
        String civil=civilcito;
        String tCuenta=tcuentita;
        String numCuenta=numCuentita;
        String contrasena=contrasenita;
        String apertura=aperturita;
        String cuenta=cuentica;
        Bienvenida vi=new Bienvenida();
        //Enviamos todos los datos para su uso en la otra vista
        vi.setUser(nombre);
        vi.setNombre(nombre);
        vi.setBalance(valor);
        vi.setCedula(cedula);
        vi.setCumple(cumpleanos);
        vi.setGenero(genero);
        vi.setDireccion(direccion);
        vi.setTelefono(telefono);
        vi.setCorreo(correo);
        vi.setCivil(civil);
        vi.setTipoCuenta(tCuenta);
        vi.setNumCuenta(numCuenta);
        vi.setContra(contrasena);
        vi.setApertura(apertura);
        vi.setAccount(cuenta);
        vi.setVisible(true);
        this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Error al actualizar el balance.");
        }            
    
        } catch (SQLException e) {
            //  si hay algun error con la consulta, se muestrar en el Output o consola
            JOptionPane.showMessageDialog(null, "Error al ejecutar la consulta: " + e.getMessage());
        }
    }
     }

    }//GEN-LAST:event_btnLoginActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton inicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtDepo;
    // End of variables declaration//GEN-END:variables
}
